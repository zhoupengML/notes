* Shell Command
** 切换 gcc 版本
   #+BEGIN_EXAMPLE
   sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.7 50
   sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 40
   接着输入：
   sudo update-alternatives --config gcc
   #+END_EXAMPLE
** Redirect
   #+BEGIN_EXAMPLE
   ls > log 2>&1
   or
   ls &> log
   #+END_EXAMPLE
** linux sed 批量替换多个文件中的字符串
   #+BEGIN_SRC sh
   sed -i "s/oldstring/newstring/g" `grep oldstring -rl yourdir`
   #+END_SRC
** Grep in specified file
   #+BEGIN_SRC sh
   find . -name '*.h' | xargs grep 'string'
   #+END_SRC
* Bash
** Get file path
   - BASH_SOURCE
     是一个数组，它的第一个元素是当前脚本的名称
     #+BEGIN_EXAMPLE
     bash_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
     首先 cd 到脚本文件所在的文件夹,然后执行 pwd 获得文件所在路径
     #+END_EXAMPLE
   - dirname
     获取文件夹路径
     #+BEGIN_EXAMPLE
     $(dirname $0)
     $0: filename
     #+END_EXAMPLE
** Example
   #+BEGIN_EXAMPLE
   #!/usr/bin/env bash

   if [ $# != 1 ]
   then
    echo """
   Usage ./test.sh path
   """ >&2 
    exit 1
   else
    echo $0
    echo 
   fi
   
   cd $1
   
   for file in `ls`
   do
    echo -n "Want to rm : $file ?(y/n):"
    read input
    if [ "${input:-y}" = y ] ;then
       echo rm $file
       rm $file
       echo done
    else
	echo pass
    fi
   
   done
   #+END_EXAMPLE
** Return value
   #+BEGIN_EXAMPLE
   $?
   true: 0
   false: 1
   #+END_EXAMPLE
** Arguments 
   #+BEGIN_EXAMPLE
   count : $#
   argv: $0 $1 $2
   #+END_EXAMPLE
** Variable default Value
   #+BEGIN_EXAMPLE
   ${var:-value}
   #+END_EXAMPLE

* Opencv
** Install
   #+BEGIN_EXAMPLE
   sudo apt-get install build-essential cmake libgtk2.0-dev pkg-config python-dev python-numpy libavcodec-dev libavformat-dev libswscale-dev
   cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/home/shhs/env/opencv2_4_10 ..  
   DESTDIR=/home/shhs/env/opencv2_4_10 && make install
   #+END_EXAMPLE

